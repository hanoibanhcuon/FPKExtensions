<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FPKOverlayManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FPKOverlayManager</TokenIdentifier>
			<Abstract type="html">This class is the core for the Extensions. You are supposed to subclass it (OverlayManager is an example) to enable or disable extensions.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKOverlayManager/setDocumentViewController:</TokenIdentifier>
			<Abstract type="html">You need to assign to the FPKOverlayManager the MFDocumentViewController in order to access its MFDocumentManager and the coordinate conversion methods.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) MFDocumentViewController&lt;FPKOverlayManagerDelegate&gt; *documentViewController</Declaration>
			
			
			<Anchor>//api/name/documentViewController</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FPKOverlayManager/documentViewController</TokenIdentifier>
			<Abstract type="html">You need to assign to the FPKOverlayManager the MFDocumentViewController in order to access its MFDocumentManager and the coordinate conversion methods.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) MFDocumentViewController&lt;FPKOverlayManagerDelegate&gt; *documentViewController</Declaration>
			
			
			<Anchor>//api/name/documentViewController</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKOverlayManager/setExtensions:</TokenIdentifier>
			<Abstract type="html">Method to set the supported Extensions.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>- (void)setExtensions:(NSArray *)ext</Declaration>
			<Parameters>
				<Parameter>
					<Name>ext</Name>
					<Abstract type="html">An array of strings that should contain every supported annotation like FPKMap, FPKYouTube, ecc.

    [anOverlayManager setExtensions:[[NSArray alloc] initWithObjects:@"FPKMap", @"FPKYouTube", nil]];</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setExtensions:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKOverlayManager/initWithExtensions:</TokenIdentifier>
			<Abstract type="html">You can init this object passing the extensions as array, or use the standard init method and then set the extensions manually.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>- (FPKOverlayManager *)initWithExtensions:(NSArray *)ext</Declaration>
			<Parameters>
				<Parameter>
					<Name>ext</Name>
					<Abstract type="html">An array of strings that should contain every supported annotation like FPKMap, FPKYouTube, ecc.

    [[anOverlayManager alloc] initWithExtensions:[[NSArray alloc] initWithObjects:@"FPKMap", @"FPKYouTube", nil]];</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithExtensions:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKOverlayManager/showAnnotationForOverlay:withRect:andUri:onPage:</TokenIdentifier>
			<Abstract type="html">Method that is called to transform a pdf annotation into a UIView that will be added over the pdf page. The method itself checks if there is an Extension that support the url prefix and pass every parameter to the Extension.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>- (UIView *)showAnnotationForOverlay:(BOOL)load withRect:(CGRect)rect andUri:(NSString *)uri onPage:(NSUInteger)page</Declaration>
			<Parameters>
				<Parameter>
					<Name>load</Name>
					<Abstract type="html">If the method is called when the pdf page is going to be drawn the value should be YES, otherwise NO (usually when a user tapped on the page over the annotation rect).</Abstract>
				</Parameter><Parameter>
					<Name>rect</Name>
					<Abstract type="html">The CGRect in page coordinates of the annotation as extracted from the pdf tree.</Abstract>
				</Parameter><Parameter>
					<Name>uri</Name>
					<Abstract type="html">The uri contained in the annotation hyperlink in the form prefix://path?param1&amp;param2.</Abstract>
				</Parameter><Parameter>
					<Name>page</Name>
					<Abstract type="html">The pdf page that is requesting the view for the annotation.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The UIView that has been created by the right Extension and will be added over the page.</Abstract></ReturnValue>
			<Anchor>//api/name/showAnnotationForOverlay:withRect:andUri:onPage:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKOverlayManager/overlayViewWithTag:</TokenIdentifier>
			<Abstract type="html">This method will search on the subviews for the one with a desired tag.</Abstract>
			<DeclaredIn>FPKOverlayManager.h</DeclaredIn>			
			
			<Declaration>- (UIView *)overlayViewWithTag:(int)tag</Declaration>
			<Parameters>
				<Parameter>
					<Name>tap</Name>
					<Abstract type="html">The tag of the desired view.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The view for the corresponding tag.</Abstract></ReturnValue>
			<Anchor>//api/name/overlayViewWithTag:</Anchor>
		</Token>
		
	</File>
</Tokens>