<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FPKYouTube.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FPKYouTube</TokenIdentifier>
			<Abstract type="html">This Extension is useful to place a YouTube video over the page</Abstract>
			<DeclaredIn>FPKYouTube.h</DeclaredIn>
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKYouTube/initWithParams:andFrame:from:</TokenIdentifier>
			<Abstract type="html">This method is called by the FPKOverlayManager if the Extension supports the requested prefix.
You should return the UIView to be placed over the page. You can also return nil and perform some other operations like presenting a modal view on the</Abstract>
			<DeclaredIn>FPKYouTube.m</DeclaredIn>			
			
			<Declaration>- (UIView *)initWithParams:(NSDictionary *)params andFrame:(CGRect)frame from:(FPKOverlayManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">This dictionary contains all the parameters extracted from the url

* prefix the part in the url before ://
* path the part in the url after ://
* params another NSDictionary that contains the parsed parameters after the ://
     - resource the part before ?
     - ... custom parameters included in the annotation separated by &amp;
* load YES if the call for the view is made when the pdf page is going to be loaded, NO if the call is made when the user taps on the annotation area</Abstract>
				</Parameter><Parameter>
					<Name>frame</Name>
					<Abstract type="html">The annotation frame in pdf page coordinates. If the padding parameter is specified in the url, the frame is a CGRectInset of the real annotation frame. This feature is useful if the pdf has been created with Adobe InDesign that creates the annotation 2 pixel wider than the original object. Just specify in the url a param ?padding=2 and the frame will be set accordingly.</Abstract>
				</Parameter><Parameter>
					<Name>manager</Name>
					<Abstract type="html">The FPKOverlayManager that can be used to perform many operations like accessing the MFDocumentViewController or the MFDocumentManager.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">UIView that will be placed over the pdf page by the FPKOverlayManager.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithParams:andFrame:from:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FPKYouTube/acceptedPrefixes</TokenIdentifier>
			<Abstract type="html">         As we are an FPKWebView we can remove the background, otherwise a grayish borded will appear sometimes
         </Abstract>
			<DeclaredIn>FPKYouTube.m</DeclaredIn>			
			
			<Declaration>+ (NSArray *)acceptedPrefixes</Declaration>
			
			
			<Anchor>//api/name/acceptedPrefixes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FPKYouTube/respondsToPrefix:</TokenIdentifier>
			<Abstract type="html">You should implement this method to return a BOOL value only on supported prefixes.</Abstract>
			<DeclaredIn>FPKYouTube.m</DeclaredIn>			
			
			<Declaration>+ (BOOL)respondsToPrefix:(NSString *)prefix</Declaration>
			<Parameters>
				<Parameter>
					<Name>prefix</Name>
					<Abstract type="html">The prefix in the form @"map".</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES or NO if the prefix is support by the Extension.</Abstract></ReturnValue>
			<Anchor>//api/name/respondsToPrefix:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKYouTube/rect</TokenIdentifier>
			<Abstract type="html">The frame of the view can change when the pdf mode change and the device is rotated.
The original frame is stored to perform the conversion on the fly when needed.</Abstract>
			<DeclaredIn>FPKYouTube.m</DeclaredIn>			
			
			<Declaration>- (CGRect)rect</Declaration>
			
			<ReturnValue><Abstract type="html">rect The original frame of the UIView.</Abstract></ReturnValue>
			<Anchor>//api/name/rect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FPKYouTube/setRect:</TokenIdentifier>
			<Abstract type="html">Set the original frame. More info on rect.</Abstract>
			<DeclaredIn>FPKYouTube.m</DeclaredIn>			
			
			<Declaration>- (void)setRect:(CGRect)aRect</Declaration>
			<Parameters>
				<Parameter>
					<Name>rect</Name>
					<Abstract type="html">The original frame.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRect:</Anchor>
		</Token>
		
	</File>
</Tokens>