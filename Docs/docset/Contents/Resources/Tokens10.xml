<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/FPKView.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/FPKView</TokenIdentifier>
			<Abstract type="html">Complete the description and remove the icon</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>
			
			<NodeRef refid="10"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/FPKView/initWithParams:andFrame:from:</TokenIdentifier>
			<Abstract type="html">This method is invocated by the FPKOverlayManager if the Extension supports the requested prefix.
You should return the UIView to be placed over the page. You can also return nil and perform some other operations like presenting a modal view on the</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>			
			
			<Declaration>- (UIView *)initWithParams:(NSDictionary *)params andFrame:(CGRect)frame from:(FPKOverlayManager *)manager</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">This dictionary contains all the parameters extracted from the url

* prefix the part in the url before ://
* path the part in the url after ://
* params another NSDictionary that contains the parsed paramenters after the ://
     - resource the part before ?
     - ... custom parameters included in the annotation separated by &amp;
* load YES if the call for the view is made when the pdf page is going to be loaded, NO if the call is made when the user taps on the annotation area</Abstract>
				</Parameter><Parameter>
					<Name>frame</Name>
					<Abstract type="html">The annotation frame in pdf page coordinates. If the padding parameter is specified in the url, the frame is a CGRectInset of the real annotation frame. This feature is useful if the pdf have been created with Adobe InDesign that creates the annotation 2 pixel wider than the original object. Just specify in the url a param ?padding=2 and the frame will be setted accordingly.</Abstract>
				</Parameter><Parameter>
					<Name>manager</Name>
					<Abstract type="html">The FPKOverlayManager that can be used to perform many operations like accessing the MFDocumentViewController or the MFDocumentManager.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">UIView that will be placed over the pdf page by the FPKOverlayManager.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithParams:andFrame:from:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/FPKView/acceptedPrefixes</TokenIdentifier>
			<Abstract type="html">complete the description</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)acceptedPrefixes</Declaration>
			
			
			<Anchor>//api/name/acceptedPrefixes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/FPKView/respondsToPrefix:</TokenIdentifier>
			<Abstract type="html">complete the description</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)respondsToPrefix:(NSString *)prefix</Declaration>
			
			
			<Anchor>//api/name/respondsToPrefix:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/FPKView/rect</TokenIdentifier>
			<Abstract type="html">complete the description</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>			
			
			<Declaration>- (CGRect)rect</Declaration>
			
			<ReturnValue><Abstract type="html">rect</Abstract></ReturnValue>
			<Anchor>//api/name/rect</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/FPKView/setRect:</TokenIdentifier>
			<Abstract type="html">complete the description</Abstract>
			<DeclaredIn>FPKView.h</DeclaredIn>			
			
			<Declaration>- (void)setRect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/setRect:</Anchor>
		</Token>
		
	</File>
</Tokens>